# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import mypy.options as module_0
import tinydb.mypy_plugin as module_1


def test_case_0():
    str_0 = "Z$\x0c"
    options_0 = module_0.Options()
    tiny_d_b_plugin_0 = module_1.TinyDBPlugin(options_0)
    assert tiny_d_b_plugin_0.named_placeholders == {}
    var_0 = tiny_d_b_plugin_0.get_dynamic_class_hook(str_0)
    var_1 = tiny_d_b_plugin_0.get_dynamic_class_hook(str_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'\x7f\x98\xcd\x81M\x9d\xe8\x00\x16;"\x9e\xde\xe9'
    module_1.TinyDBPlugin(bytes_0)


def test_case_2():
    str_0 = "~btk"
    var_0 = module_1.plugin(str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    options_0 = module_0.Options()
    tiny_d_b_plugin_0 = module_1.TinyDBPlugin(options_0)
    assert tiny_d_b_plugin_0.named_placeholders == {}
    str_0 = "obct is immutble"
    var_0 = module_1.plugin(str_0)
    var_1 = module_1.plugin(str_0)
    var_2 = module_1.plugin(str_0)
    str_1 = "tinydb.utils.with_typehint"
    var_3 = tiny_d_b_plugin_0.get_dynamic_class_hook(str_1)
    str_2 = "CO|+o.GZR +zejZC"
    var_4 = module_1.plugin(str_2)
    options_1 = module_0.Options()
    var_5 = module_1.plugin(var_1)
    var_6 = module_1.plugin(str_2)
    module_1.TinyDBPlugin(var_1)
